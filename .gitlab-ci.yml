################################################################################
# ASH Continuous Integration Workflow.
# Please see https://docs.gitlab.com/ce/ci/yaml/README.html for all available 
# options.
################################################################################
# The current policy is to always run the default integration pipeline if any
# of the following conditions occur:
# 1) A merge request to the master branch is made.
# 2) A commit to the master branch is made with a tag starting with "release".
# 3) A commit to the master branch is made with a message starting with "Merge".
# 4) A commit to the any branch is made with a message containing "RUN_CI".
# Note that developers should always run all tests locally before attempting
# to commit their work to the master branch in any case.
################################################################################

workflow:
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TAG =~ /^release/'
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TITLE =~ /^Merge/'
    - if: '$CI_COMMIT_MESSAGE =~ /RUN_CI/'
    - if: '$RUN_CI == "RUN_CI"'
    - when: never

stages:
  - build
  - test

# Define a list of available shell runners.
.shell_runners: &shell_runners
  - shell

# Define common setup script tasks.
.work_venv: &work_venv
  - source ~/.virtualenvs/tvm/bin/activate

build-heterocl:
  stage: build
  tags: *shell_runners
  artifacts:
    untracked: true
  cache:
    untracked: true
  script:
    - *work_venv
    - make -j4

test-heterocl:
  stage: test
  tags: *shell_runners
  script:
    - *work_venv
    - cd tests; pytest --forked -v -k codegen
#    - python -m pytest tests
#    - python -m pytest samples
#    - python -m pytest tutorials
#    - python -m pytest hlib/tests
